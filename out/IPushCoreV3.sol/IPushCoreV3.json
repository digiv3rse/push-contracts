{"abi":[{"type":"function","name":"addSubGraph","inputs":[{"name":"_subGraphData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blockChannel","inputs":[{"name":"_channelAddress","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimArbitraryRequestFees","inputs":[{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimChatIncentives","inputs":[{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createChannelSettings","inputs":[{"name":"_notifOptions","type":"uint256","internalType":"uint256"},{"name":"_notifSettings","type":"string","internalType":"string"},{"name":"_notifDescription","type":"string","internalType":"string"},{"name":"_amountDeposited","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createChannelWithPUSH","inputs":[{"name":"_channelType","type":"uint8","internalType":"enum CoreTypes.ChannelType"},{"name":"_identity","type":"bytes","internalType":"bytes"},{"name":"_amount","type":"uint256","internalType":"uint256"},{"name":"_channelExpiryTime","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getChannelVerfication","inputs":[{"name":"_channel","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"verificationStatus","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"handleArbitraryRequestData","inputs":[{"name":"feeId","type":"uint8","internalType":"uint8"},{"name":"feePercentage","type":"tuple","internalType":"struct GenericTypes.Percentage","components":[{"name":"percentageNumber","type":"uint256","internalType":"uint256"},{"name":"decimalPlaces","type":"uint256","internalType":"uint256"}]},{"name":"amountRecipient","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"handleChatRequestData","inputs":[{"name":"requestSender","type":"address","internalType":"address"},{"name":"requestReceiver","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unverifyChannel","inputs":[{"name":"_channel","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateChannelMeta","inputs":[{"name":"_newIdentity","type":"bytes","internalType":"bytes"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateChannelState","inputs":[{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"verifyChannel","inputs":[{"name":"_channel","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AddChannel","inputs":[{"name":"channel","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"channelType","type":"uint8","indexed":true,"internalType":"enum CoreTypes.ChannelType"},{"name":"identity","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"AddSubGraph","inputs":[{"name":"channel","type":"address","indexed":true,"internalType":"address"},{"name":"_subGraphData","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"ArbitraryRequest","inputs":[{"name":"sender","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"amountDeposited","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"feePercent","type":"tuple","indexed":false,"internalType":"struct GenericTypes.Percentage","components":[{"name":"percentageNumber","type":"uint256","internalType":"uint256"},{"name":"decimalPlaces","type":"uint256","internalType":"uint256"}]},{"name":"feeId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ArbitraryRequestFeesClaimed","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amountClaimed","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ChannelBlocked","inputs":[{"name":"channel","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"ChannelCreated","inputs":[{"name":"channel","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"channelType","type":"uint8","indexed":true,"internalType":"enum CoreTypes.ChannelType"},{"name":"identity","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"ChannelNotifcationSettingsAdded","inputs":[{"name":"_channel","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"totalNotifOptions","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_notifSettings","type":"string","indexed":false,"internalType":"string"},{"name":"_notifDescription","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"ChannelStateUpdate","inputs":[{"name":"channel","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"amountRefunded","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amountDeposited","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ChannelVerificationRevoked","inputs":[{"name":"channel","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"revoker","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ChannelVerified","inputs":[{"name":"channel","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"verifier","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ChatIncentiveClaimed","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amountClaimed","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"IncentivizeChatReqReceived","inputs":[{"name":"requestSender","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"requestReceiver","type":"address","indexed":false,"internalType":"address"},{"name":"amountForReqReceiver","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"feePoolAmount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardsHarvested","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"rewardAmount","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"fromEpoch","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"tillEpoch","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Staked","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amountStaked","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Unstaked","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amountUnstaked","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UpdateChannel","inputs":[{"name":"channel","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"identity","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"amountDeposited","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addSubGraph(bytes)":"8779904e","blockChannel(bytes32)":"6e73483b","claimArbitraryRequestFees(uint256)":"36eedd54","claimChatIncentives(uint256)":"cdc43a4b","createChannelSettings(uint256,string,string,uint256)":"f01948c1","createChannelWithPUSH(uint8,bytes,uint256,uint256)":"a90521c3","getChannelVerfication(bytes32)":"dec4ae06","handleArbitraryRequestData(uint8,(uint256,uint256),address,uint256)":"1d9311ab","handleChatRequestData(address,address,uint256)":"2359600c","unverifyChannel(bytes32)":"6f973500","updateChannelMeta(bytes,uint256)":"c8868082","updateChannelState(uint256)":"53807e2f","verifyChannel(bytes32)":"5371dc42"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"channel\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"enum CoreTypes.ChannelType\",\"name\":\"channelType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"identity\",\"type\":\"bytes\"}],\"name\":\"AddChannel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_subGraphData\",\"type\":\"bytes\"}],\"name\":\"AddSubGraph\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountDeposited\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"percentageNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimalPlaces\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct GenericTypes.Percentage\",\"name\":\"feePercent\",\"type\":\"tuple\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"feeId\",\"type\":\"uint256\"}],\"name\":\"ArbitraryRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountClaimed\",\"type\":\"uint256\"}],\"name\":\"ArbitraryRequestFeesClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"channel\",\"type\":\"bytes32\"}],\"name\":\"ChannelBlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"channel\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"enum CoreTypes.ChannelType\",\"name\":\"channelType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"identity\",\"type\":\"bytes\"}],\"name\":\"ChannelCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_channel\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalNotifOptions\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_notifSettings\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_notifDescription\",\"type\":\"string\"}],\"name\":\"ChannelNotifcationSettingsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"channel\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountRefunded\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountDeposited\",\"type\":\"uint256\"}],\"name\":\"ChannelStateUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"channel\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"}],\"name\":\"ChannelVerificationRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"channel\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"ChannelVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountClaimed\",\"type\":\"uint256\"}],\"name\":\"ChatIncentiveClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"requestSender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requestReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountForReqReceiver\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feePoolAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"IncentivizeChatReqReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromEpoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tillEpoch\",\"type\":\"uint256\"}],\"name\":\"RewardsHarvested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountUnstaked\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"channel\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"identity\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountDeposited\",\"type\":\"uint256\"}],\"name\":\"UpdateChannel\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_subGraphData\",\"type\":\"bytes\"}],\"name\":\"addSubGraph\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_channelAddress\",\"type\":\"bytes32\"}],\"name\":\"blockChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claimArbitraryRequestFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claimChatIncentives\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_notifOptions\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_notifSettings\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_notifDescription\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amountDeposited\",\"type\":\"uint256\"}],\"name\":\"createChannelSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum CoreTypes.ChannelType\",\"name\":\"_channelType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_identity\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_channelExpiryTime\",\"type\":\"uint256\"}],\"name\":\"createChannelWithPUSH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_channel\",\"type\":\"bytes32\"}],\"name\":\"getChannelVerfication\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"verificationStatus\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeId\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"percentageNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimalPlaces\",\"type\":\"uint256\"}],\"internalType\":\"struct GenericTypes.Percentage\",\"name\":\"feePercentage\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"amountRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"handleArbitraryRequestData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requestReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"handleChatRequestData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_channel\",\"type\":\"bytes32\"}],\"name\":\"unverifyChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_newIdentity\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"updateChannelMeta\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"updateChannelState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_channel\",\"type\":\"bytes32\"}],\"name\":\"verifyChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"blockChannel(bytes32)\":{\"details\":\"- Can only be called by pushChannelAdmin         - Can only be Called for Activated Channels         - Can only Be Called for NON-BLOCKED Channels         - Updates channel's state to BLOCKED ('3')         - Decreases the Channel Count         - Since there is no refund, the channel's poolContribution is added to PROTOCOL_POOL_FEES and Removed from CHANNEL_POOL_FUNDS         - Emit 'ChannelBlocked' Event\",\"params\":{\"_channelAddress\":\"Address of the Channel to be blocked, in bytes32 format\"}},\"claimArbitraryRequestFees(uint256)\":{\"details\":\"Only accessible if the user has a non-zero balance in the contract for arbitrary request fees.\",\"params\":{\"_amount\":\"Amount of PUSH tokens to be claimed.\"}},\"claimChatIncentives(uint256)\":{\"details\":\"Only accessible if a particular user has a non-zero PUSH token earnings in contract.\",\"params\":{\"_amount\":\"Amount of PUSH tokens to be claimed\"}},\"createChannelSettings(uint256,string,string,uint256)\":{\"params\":{\"_amountDeposited\":\"- Fees required for setting up channel notification settings\",\"_notifDescription\":\"- Description of each Notification that depicts the Purpose of that Notification\",\"_notifOptions\":\"- Total Notification options provided by the Channel Owner\",\"_notifSettings\":\"- Deliminated String of Notification Settings\"}},\"createChannelWithPUSH(uint8,bytes,uint256,uint256)\":{\"details\":\"Only allows users to Create One Channel for a specific address.         Only allows a Valid Channel Type to be assigned for the Channel Being created.         Validates and Transfers the amount of PUSH  from the Channel Creator to the EPNS Core Contract\",\"params\":{\"_amount\":\"Amount of PUSH  to be deposited before Creating the Channel\",\"_channelExpiryTime\":\"the expiry time for time bound channels\",\"_channelType\":\"the type of the Channel Being created\",\"_identity\":\"the bytes value of the identity of the Channel\"}},\"getChannelVerfication(bytes32)\":{\"details\":\"Get if channel is verified or not\",\"params\":{\"_channel\":\"Address of the channel to be Verified, in bytes32 format\"},\"returns\":{\"verificationStatus\":\" Returns 0 for not verified, 1 for primary verification, 2 for secondary verification\"}},\"handleArbitraryRequestData(uint8,(uint256,uint256),address,uint256)\":{\"details\":\"Transfers the specified amount from the caller to the contract and calls the private function to process the request.\",\"params\":{\"amount\":\"The total amount sent by the sender for the arbitrary request.\",\"amountRecipient\":\"The address of the recipient.\",\"feeId\":\"The fee ID associated with the request.\",\"feePercentage\":\"The fee percentage to be deducted.\"}},\"handleChatRequestData(address,address,uint256)\":{\"details\":\"This function currently handles the PUSH tokens that enters the contract due to any         activation of incentivizied chat request from Communicator contract.          - Can only be called by Communicator contract          - Records and keeps track of Pool Funds and Pool Fees          - Stores the PUSH tokens for the Celeb User, which can be claimed later only by that specific user.\",\"params\":{\"amount\":\"Amount of PUSH tokens deposited for activating the chat request\",\"requestReceiver\":\"Address of the target user for whom the request is activated.\",\"requestSender\":\"Address that initiates the incentivized chat request\"}},\"unverifyChannel(bytes32)\":{\"details\":\"Channel who verified this channel or Push Channel Admin can only revoke\",\"params\":{\"_channel\":\"Address of the channel to be unverified, in bytes32 format\"}},\"updateChannelMeta(bytes,uint256)\":{\"details\":\"Only accessible when contract is NOT Paused       Only accessible when Caller is the Channel Owner itself       If Channel Owner is updating the Channel Meta for the first time:       Required Fees => 50 PUSH tokens       If Channel Owner is updating the Channel Meta for the N time:       Required Fees => (50 * N) PUSH Tokens       Total fees goes to PROTOCOL_POOL_FEES       Updates the channelUpdateCounter       Updates the channelUpdateBlock       Records the Block Number of the Block at which the Channel is being updated       Emits an event with the new identity for the respective Channel Address\",\"params\":{\"_amount\":\"amount of PUSH Token required for updating channel details.\",\"_newIdentity\":\"bytes Value for the New Identity of the Channel\"}},\"updateChannelState(uint256)\":{\"details\":\"- Can only be called by the onwer of the channel         - Channel must not be in an INACTIVE or BLOCKED state, else REVERTS          - If Channel is ACTIVE state, it can enter either of the two phases:            - DEACTIVATION PHASE:              a. Channel gets deactivated and refundable amount gets transferred back to Channel Owner.            - TIME-BOUND CHANNEL DELETION PHASE:              a. If Channel is expired, it gets deleted from the protocol. Refundable amount is refunded to Channel Owner              b. Channel Count is decreased in the protocol.         - If Channel is in DEACTIVATED state, it can only enter the REACTIVATION PHASE:           - REACTIVATION PHASE:              a. Chanel Owner pays fees to reactivate his/her channel              b. Fees goes to Pool Funds         - Emit 'ChannelStateUpdate' Event\",\"params\":{\"_amount\":\"Amount to be passed for reactivating a channel. If Channel is to be deactivated, or deleted, amount can be ZERO.\"}},\"verifyChannel(bytes32)\":{\"details\":\"Channel will be verified by primary or secondary verification, will fail or upgrade if already verified\",\"params\":{\"_channel\":\"Address of the channel to be Verified, in bytes32 format\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AddChannel(bytes32,uint8,bytes)\":{\"notice\":\"emits whenever a new channel is created - ToDo: Remove this event\"},\"AddSubGraph(address,bytes)\":{\"notice\":\"emits whenever a subgraph is added(handled by backend)\"},\"ArbitraryRequest(bytes32,address,uint256,(uint256,uint256),uint256)\":{\"notice\":\"emits when arbitray cross chain request is received\"},\"ArbitraryRequestFeesClaimed(address,uint256)\":{\"notice\":\"emits whenever a user claims the funds that they got from arbirary request fees\"},\"ChannelBlocked(bytes32)\":{\"notice\":\"emits whenever any channel is blocked by admin\"},\"ChannelCreated(bytes32,uint8,bytes)\":{\"notice\":\"emits whenever a new channel is created\"},\"ChannelNotifcationSettingsAdded(bytes32,uint256,string,string)\":{\"notice\":\"emits whenever a channel changes the notification settings\"},\"ChannelStateUpdate(bytes32,uint256,uint256)\":{\"notice\":\"emits when the state of a channel is updated from Active State to either Deactivated, Reactivated, Blocked or Deleted\"},\"ChannelVerificationRevoked(bytes32,address)\":{\"notice\":\"emits whenever the verification is revoked for a channel\"},\"ChannelVerified(bytes32,address)\":{\"notice\":\"emits whenever a channel is verified either by admin or any otherchannel with primary verification\"},\"ChatIncentiveClaimed(address,uint256)\":{\"notice\":\"emits whenever a user claims the remianing funds that they got from incentivized chat\"},\"IncentivizeChatReqReceived(bytes32,address,uint256,uint256,uint256)\":{\"notice\":\"emits whenever any user receives an incentivized chat request from another user\"},\"RewardsHarvested(address,uint256,uint256,uint256)\":{\"notice\":\"emits whenever a users claims the rewards from the staking program(not unstake)\"},\"Staked(address,uint256)\":{\"notice\":\"emits whenever a user stakes in the staking program\"},\"Unstaked(address,uint256)\":{\"notice\":\"emits whenever a user unstakes from the staking program\"},\"UpdateChannel(bytes32,bytes,uint256)\":{\"notice\":\"emits whenever a channel updates its metadata\"}},\"kind\":\"user\",\"methods\":{\"blockChannel(bytes32)\":{\"notice\":\"ALlows the pushChannelAdmin to Block any particular channel Completely.\"},\"claimArbitraryRequestFees(uint256)\":{\"notice\":\"Allows users to claim their earned fees from arbitrary requests.\"},\"claimChatIncentives(uint256)\":{\"notice\":\"Allows the Celeb User(for whom chat requests were triggered) to claim their PUSH token earings.\"},\"createChannelSettings(uint256,string,string,uint256)\":{\"notice\":\"- Deliminated Notification Settings string contains -> Total Notif Options + Notification Settings For instance: 5+1-0+2-50-20-100+1-1+2-78-10-150  5 -> Total Notification Options provided by a Channel owner  For Boolean Type Notif Options  1-0 -> 1 stands for BOOLEAN type - 0 stands for Default Boolean Type for that Notifcation(set by Channel Owner), In this case FALSE.  1-1 stands for BOOLEAN type - 1 stands for Default Boolean Type for that Notifcation(set by Channel Owner), In this case TRUE.  For SLIDER TYPE Notif Options   2-50-20-100 -> 2 stands for SLIDER TYPE - 50 stands for Default Value for that Option - 20 is the Start Range of that SLIDER - 100 is the END Range of that SLIDER Option  2-78-10-150 -> 2 stands for SLIDER TYPE - 78 stands for Default Value for that Option - 10 is the Start Range of that SLIDER - 150 is the END Range of that SLIDER Option\"},\"createChannelWithPUSH(uint8,bytes,uint256,uint256)\":{\"notice\":\"An external function that allows users to Create their Own Channels by depositing a valid amount of PUSH\"},\"getChannelVerfication(bytes32)\":{\"notice\":\"Function is designed to tell if a channel is verified or not\"},\"handleArbitraryRequestData(uint8,(uint256,uint256),address,uint256)\":{\"notice\":\"Handles arbitrary request data by transferring tokens and processing the request.\"},\"handleChatRequestData(address,address,uint256)\":{\"notice\":\"Designed to handle the incoming Incentivized Chat Request Data and PUSH tokens.\"},\"unverifyChannel(bytes32)\":{\"notice\":\"Function is designed to unverify a channel\"},\"updateChannelMeta(bytes,uint256)\":{\"notice\":\"Allows Channel Owner to update their Channel's Details like Description, Name, Logo, etc by passing in a new identity bytes hash\"},\"updateChannelState(uint256)\":{\"notice\":\"Allows Channel Owners to change the state of their channel or remove Expired Channels (if channel was time-bound)         A channel's state can be => INACTIVE, ACTIVATED, DEACTIVATED or BLOCKED\"},\"verifyChannel(bytes32)\":{\"notice\":\"Function is designed to verify a channel\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPushCoreV3.sol\":\"IPushCoreV3\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\",\":wormhole-solidity-sdk /= lib/wormhole-solidity-sdk/src/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"contracts/interfaces/IPushCoreV3.sol\":{\"keccak256\":\"0x6593fffa1b257589507ab12dadba3f897e2bb99fa784991d4f17e57602476571\",\"urls\":[\"bzz-raw://5221d70bdf711fd7b1196af9eb051d75382c69118d49bcbb9252a4cb6cd3d951\",\"dweb:/ipfs/Qmb2WzjNC6HuDXsZatzcbUXYspCjzH1Vvo662hwXBY5fvW\"]},\"contracts/libraries/DataTypes.sol\":{\"keccak256\":\"0x6a4737d7b6e2c86ced67cedbf8cdd186efb0e8aab71680367a5ad349adc98096\",\"urls\":[\"bzz-raw://7b880bbf509ff81482129031eacef4ed16b1a21ef1221e71511ffb302730809e\",\"dweb:/ipfs/QmVcRDhH7tz2yh5reMa4SGm9CcfH4pRpdgUL2L2rWfNAzn\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"channel","type":"bytes32","indexed":true},{"internalType":"enum CoreTypes.ChannelType","name":"channelType","type":"uint8","indexed":true},{"internalType":"bytes","name":"identity","type":"bytes","indexed":false}],"type":"event","name":"AddChannel","anonymous":false},{"inputs":[{"internalType":"address","name":"channel","type":"address","indexed":true},{"internalType":"bytes","name":"_subGraphData","type":"bytes","indexed":false}],"type":"event","name":"AddSubGraph","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"sender","type":"bytes32","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"uint256","name":"amountDeposited","type":"uint256","indexed":false},{"internalType":"struct GenericTypes.Percentage","name":"feePercent","type":"tuple","components":[{"internalType":"uint256","name":"percentageNumber","type":"uint256"},{"internalType":"uint256","name":"decimalPlaces","type":"uint256"}],"indexed":false},{"internalType":"uint256","name":"feeId","type":"uint256","indexed":true}],"type":"event","name":"ArbitraryRequest","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"amountClaimed","type":"uint256","indexed":true}],"type":"event","name":"ArbitraryRequestFeesClaimed","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"channel","type":"bytes32","indexed":true}],"type":"event","name":"ChannelBlocked","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"channel","type":"bytes32","indexed":true},{"internalType":"enum CoreTypes.ChannelType","name":"channelType","type":"uint8","indexed":true},{"internalType":"bytes","name":"identity","type":"bytes","indexed":false}],"type":"event","name":"ChannelCreated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"_channel","type":"bytes32","indexed":false},{"internalType":"uint256","name":"totalNotifOptions","type":"uint256","indexed":false},{"internalType":"string","name":"_notifSettings","type":"string","indexed":false},{"internalType":"string","name":"_notifDescription","type":"string","indexed":false}],"type":"event","name":"ChannelNotifcationSettingsAdded","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"channel","type":"bytes32","indexed":true},{"internalType":"uint256","name":"amountRefunded","type":"uint256","indexed":false},{"internalType":"uint256","name":"amountDeposited","type":"uint256","indexed":false}],"type":"event","name":"ChannelStateUpdate","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"channel","type":"bytes32","indexed":true},{"internalType":"address","name":"revoker","type":"address","indexed":true}],"type":"event","name":"ChannelVerificationRevoked","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"channel","type":"bytes32","indexed":true},{"internalType":"address","name":"verifier","type":"address","indexed":true}],"type":"event","name":"ChannelVerified","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"amountClaimed","type":"uint256","indexed":true}],"type":"event","name":"ChatIncentiveClaimed","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"requestSender","type":"bytes32","indexed":false},{"internalType":"address","name":"requestReceiver","type":"address","indexed":false},{"internalType":"uint256","name":"amountForReqReceiver","type":"uint256","indexed":false},{"internalType":"uint256","name":"feePoolAmount","type":"uint256","indexed":false},{"internalType":"uint256","name":"timestamp","type":"uint256","indexed":false}],"type":"event","name":"IncentivizeChatReqReceived","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"rewardAmount","type":"uint256","indexed":true},{"internalType":"uint256","name":"fromEpoch","type":"uint256","indexed":false},{"internalType":"uint256","name":"tillEpoch","type":"uint256","indexed":false}],"type":"event","name":"RewardsHarvested","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"amountStaked","type":"uint256","indexed":true}],"type":"event","name":"Staked","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"amountUnstaked","type":"uint256","indexed":true}],"type":"event","name":"Unstaked","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"channel","type":"bytes32","indexed":true},{"internalType":"bytes","name":"identity","type":"bytes","indexed":false},{"internalType":"uint256","name":"amountDeposited","type":"uint256","indexed":true}],"type":"event","name":"UpdateChannel","anonymous":false},{"inputs":[{"internalType":"bytes","name":"_subGraphData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"addSubGraph"},{"inputs":[{"internalType":"bytes32","name":"_channelAddress","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"blockChannel"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"claimArbitraryRequestFees"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"claimChatIncentives"},{"inputs":[{"internalType":"uint256","name":"_notifOptions","type":"uint256"},{"internalType":"string","name":"_notifSettings","type":"string"},{"internalType":"string","name":"_notifDescription","type":"string"},{"internalType":"uint256","name":"_amountDeposited","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createChannelSettings"},{"inputs":[{"internalType":"enum CoreTypes.ChannelType","name":"_channelType","type":"uint8"},{"internalType":"bytes","name":"_identity","type":"bytes"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_channelExpiryTime","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createChannelWithPUSH"},{"inputs":[{"internalType":"bytes32","name":"_channel","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getChannelVerfication","outputs":[{"internalType":"uint8","name":"verificationStatus","type":"uint8"}]},{"inputs":[{"internalType":"uint8","name":"feeId","type":"uint8"},{"internalType":"struct GenericTypes.Percentage","name":"feePercentage","type":"tuple","components":[{"internalType":"uint256","name":"percentageNumber","type":"uint256"},{"internalType":"uint256","name":"decimalPlaces","type":"uint256"}]},{"internalType":"address","name":"amountRecipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"handleArbitraryRequestData"},{"inputs":[{"internalType":"address","name":"requestSender","type":"address"},{"internalType":"address","name":"requestReceiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"handleChatRequestData"},{"inputs":[{"internalType":"bytes32","name":"_channel","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"unverifyChannel"},{"inputs":[{"internalType":"bytes","name":"_newIdentity","type":"bytes"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateChannelMeta"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateChannelState"},{"inputs":[{"internalType":"bytes32","name":"_channel","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"verifyChannel"}],"devdoc":{"kind":"dev","methods":{"blockChannel(bytes32)":{"details":"- Can only be called by pushChannelAdmin         - Can only be Called for Activated Channels         - Can only Be Called for NON-BLOCKED Channels         - Updates channel's state to BLOCKED ('3')         - Decreases the Channel Count         - Since there is no refund, the channel's poolContribution is added to PROTOCOL_POOL_FEES and Removed from CHANNEL_POOL_FUNDS         - Emit 'ChannelBlocked' Event","params":{"_channelAddress":"Address of the Channel to be blocked, in bytes32 format"}},"claimArbitraryRequestFees(uint256)":{"details":"Only accessible if the user has a non-zero balance in the contract for arbitrary request fees.","params":{"_amount":"Amount of PUSH tokens to be claimed."}},"claimChatIncentives(uint256)":{"details":"Only accessible if a particular user has a non-zero PUSH token earnings in contract.","params":{"_amount":"Amount of PUSH tokens to be claimed"}},"createChannelSettings(uint256,string,string,uint256)":{"params":{"_amountDeposited":"- Fees required for setting up channel notification settings","_notifDescription":"- Description of each Notification that depicts the Purpose of that Notification","_notifOptions":"- Total Notification options provided by the Channel Owner","_notifSettings":"- Deliminated String of Notification Settings"}},"createChannelWithPUSH(uint8,bytes,uint256,uint256)":{"details":"Only allows users to Create One Channel for a specific address.         Only allows a Valid Channel Type to be assigned for the Channel Being created.         Validates and Transfers the amount of PUSH  from the Channel Creator to the EPNS Core Contract","params":{"_amount":"Amount of PUSH  to be deposited before Creating the Channel","_channelExpiryTime":"the expiry time for time bound channels","_channelType":"the type of the Channel Being created","_identity":"the bytes value of the identity of the Channel"}},"getChannelVerfication(bytes32)":{"details":"Get if channel is verified or not","params":{"_channel":"Address of the channel to be Verified, in bytes32 format"},"returns":{"verificationStatus":" Returns 0 for not verified, 1 for primary verification, 2 for secondary verification"}},"handleArbitraryRequestData(uint8,(uint256,uint256),address,uint256)":{"details":"Transfers the specified amount from the caller to the contract and calls the private function to process the request.","params":{"amount":"The total amount sent by the sender for the arbitrary request.","amountRecipient":"The address of the recipient.","feeId":"The fee ID associated with the request.","feePercentage":"The fee percentage to be deducted."}},"handleChatRequestData(address,address,uint256)":{"details":"This function currently handles the PUSH tokens that enters the contract due to any         activation of incentivizied chat request from Communicator contract.          - Can only be called by Communicator contract          - Records and keeps track of Pool Funds and Pool Fees          - Stores the PUSH tokens for the Celeb User, which can be claimed later only by that specific user.","params":{"amount":"Amount of PUSH tokens deposited for activating the chat request","requestReceiver":"Address of the target user for whom the request is activated.","requestSender":"Address that initiates the incentivized chat request"}},"unverifyChannel(bytes32)":{"details":"Channel who verified this channel or Push Channel Admin can only revoke","params":{"_channel":"Address of the channel to be unverified, in bytes32 format"}},"updateChannelMeta(bytes,uint256)":{"details":"Only accessible when contract is NOT Paused       Only accessible when Caller is the Channel Owner itself       If Channel Owner is updating the Channel Meta for the first time:       Required Fees => 50 PUSH tokens       If Channel Owner is updating the Channel Meta for the N time:       Required Fees => (50 * N) PUSH Tokens       Total fees goes to PROTOCOL_POOL_FEES       Updates the channelUpdateCounter       Updates the channelUpdateBlock       Records the Block Number of the Block at which the Channel is being updated       Emits an event with the new identity for the respective Channel Address","params":{"_amount":"amount of PUSH Token required for updating channel details.","_newIdentity":"bytes Value for the New Identity of the Channel"}},"updateChannelState(uint256)":{"details":"- Can only be called by the onwer of the channel         - Channel must not be in an INACTIVE or BLOCKED state, else REVERTS          - If Channel is ACTIVE state, it can enter either of the two phases:            - DEACTIVATION PHASE:              a. Channel gets deactivated and refundable amount gets transferred back to Channel Owner.            - TIME-BOUND CHANNEL DELETION PHASE:              a. If Channel is expired, it gets deleted from the protocol. Refundable amount is refunded to Channel Owner              b. Channel Count is decreased in the protocol.         - If Channel is in DEACTIVATED state, it can only enter the REACTIVATION PHASE:           - REACTIVATION PHASE:              a. Chanel Owner pays fees to reactivate his/her channel              b. Fees goes to Pool Funds         - Emit 'ChannelStateUpdate' Event","params":{"_amount":"Amount to be passed for reactivating a channel. If Channel is to be deactivated, or deleted, amount can be ZERO."}},"verifyChannel(bytes32)":{"details":"Channel will be verified by primary or secondary verification, will fail or upgrade if already verified","params":{"_channel":"Address of the channel to be Verified, in bytes32 format"}}},"version":1},"userdoc":{"kind":"user","methods":{"blockChannel(bytes32)":{"notice":"ALlows the pushChannelAdmin to Block any particular channel Completely."},"claimArbitraryRequestFees(uint256)":{"notice":"Allows users to claim their earned fees from arbitrary requests."},"claimChatIncentives(uint256)":{"notice":"Allows the Celeb User(for whom chat requests were triggered) to claim their PUSH token earings."},"createChannelSettings(uint256,string,string,uint256)":{"notice":"- Deliminated Notification Settings string contains -> Total Notif Options + Notification Settings For instance: 5+1-0+2-50-20-100+1-1+2-78-10-150  5 -> Total Notification Options provided by a Channel owner  For Boolean Type Notif Options  1-0 -> 1 stands for BOOLEAN type - 0 stands for Default Boolean Type for that Notifcation(set by Channel Owner), In this case FALSE.  1-1 stands for BOOLEAN type - 1 stands for Default Boolean Type for that Notifcation(set by Channel Owner), In this case TRUE.  For SLIDER TYPE Notif Options   2-50-20-100 -> 2 stands for SLIDER TYPE - 50 stands for Default Value for that Option - 20 is the Start Range of that SLIDER - 100 is the END Range of that SLIDER Option  2-78-10-150 -> 2 stands for SLIDER TYPE - 78 stands for Default Value for that Option - 10 is the Start Range of that SLIDER - 150 is the END Range of that SLIDER Option"},"createChannelWithPUSH(uint8,bytes,uint256,uint256)":{"notice":"An external function that allows users to Create their Own Channels by depositing a valid amount of PUSH"},"getChannelVerfication(bytes32)":{"notice":"Function is designed to tell if a channel is verified or not"},"handleArbitraryRequestData(uint8,(uint256,uint256),address,uint256)":{"notice":"Handles arbitrary request data by transferring tokens and processing the request."},"handleChatRequestData(address,address,uint256)":{"notice":"Designed to handle the incoming Incentivized Chat Request Data and PUSH tokens."},"unverifyChannel(bytes32)":{"notice":"Function is designed to unverify a channel"},"updateChannelMeta(bytes,uint256)":{"notice":"Allows Channel Owner to update their Channel's Details like Description, Name, Logo, etc by passing in a new identity bytes hash"},"updateChannelState(uint256)":{"notice":"Allows Channel Owners to change the state of their channel or remove Expired Channels (if channel was time-bound)         A channel's state can be => INACTIVE, ACTIVATED, DEACTIVATED or BLOCKED"},"verifyChannel(bytes32)":{"notice":"Function is designed to verify a channel"}},"version":1}},"settings":{"remappings":["@ensdomains/=node_modules/@ensdomains/","@ethereum-waffle/=node_modules/@ethereum-waffle/","@openzeppelin/=node_modules/@openzeppelin/","ds-test/=lib/forge-std/lib/ds-test/src/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","solidity-bytes-utils/=node_modules/solidity-bytes-utils/","wormhole-solidity-sdk /= lib/wormhole-solidity-sdk/src/","wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/"],"optimizer":{"enabled":true,"runs":99999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/IPushCoreV3.sol":"IPushCoreV3"},"evmVersion":"shanghai","libraries":{}},"sources":{"contracts/interfaces/IPushCoreV3.sol":{"keccak256":"0x6593fffa1b257589507ab12dadba3f897e2bb99fa784991d4f17e57602476571","urls":["bzz-raw://5221d70bdf711fd7b1196af9eb051d75382c69118d49bcbb9252a4cb6cd3d951","dweb:/ipfs/Qmb2WzjNC6HuDXsZatzcbUXYspCjzH1Vvo662hwXBY5fvW"],"license":null},"contracts/libraries/DataTypes.sol":{"keccak256":"0x6a4737d7b6e2c86ced67cedbf8cdd186efb0e8aab71680367a5ad349adc98096","urls":["bzz-raw://7b880bbf509ff81482129031eacef4ed16b1a21ef1221e71511ffb302730809e","dweb:/ipfs/QmVcRDhH7tz2yh5reMa4SGm9CcfH4pRpdgUL2L2rWfNAzn"],"license":null}},"version":1},"id":14}