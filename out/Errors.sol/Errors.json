{"abi":[{"type":"error","name":"CallerNotAdmin","inputs":[]},{"type":"error","name":"CallerNotGovernance","inputs":[]},{"type":"error","name":"CallerNotMinter","inputs":[{"name":"caller","type":"address","internalType":"address"}]},{"type":"error","name":"Comm_InvalidCrossChain_Function","inputs":[]},{"type":"error","name":"Comm_InvalidNonce","inputs":[]},{"type":"error","name":"Comm_InvalidSignature_FromContract","inputs":[]},{"type":"error","name":"Comm_InvalidSignature_FromEOA","inputs":[]},{"type":"error","name":"Comm_InvalidSubscriber","inputs":[]},{"type":"error","name":"Comm_TimeExpired","inputs":[{"name":"endTime","type":"uint256","internalType":"uint256"},{"name":"currentTime","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"Core_InvalidChannel","inputs":[]},{"type":"error","name":"Core_InvalidChannelType","inputs":[]},{"type":"error","name":"Core_InvalidExpiryTime","inputs":[]},{"type":"error","name":"InsufficientFunds","inputs":[]},{"type":"error","name":"InvalidArg_ArrayLengthMismatch","inputs":[]},{"type":"error","name":"InvalidArg_LessThanExpected","inputs":[{"name":"min_threshold","type":"uint256","internalType":"uint256"},{"name":"actual_value","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InvalidArg_MoreThanExpected","inputs":[{"name":"max_threshold","type":"uint256","internalType":"uint256"},{"name":"actual_value","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InvalidArgument_WrongAddress","inputs":[{"name":"user","type":"address","internalType":"address"}]},{"type":"error","name":"InvalidMinterZeroAddress","inputs":[]},{"type":"error","name":"Payload_Duplicacy_Error","inputs":[]},{"type":"error","name":"PushStaking_InvalidEpoch_LessThanExpected","inputs":[]},{"type":"error","name":"PushStaking_InvalidEpoch_MoreThanExpected","inputs":[]},{"type":"error","name":"PushStaking_MigrationCompleted","inputs":[]},{"type":"error","name":"UnauthorizedCaller","inputs":[{"name":"caller","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200fec0f8e6d5bbe9c3f1f88148628baed8374f772b2235f5cd99a67631fe67b2564736f6c63430008140033","sourceMap":"197:3763:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;197:3763:25;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200fec0f8e6d5bbe9c3f1f88148628baed8374f772b2235f5cd99a67631fe67b2564736f6c63430008140033","sourceMap":"197:3763:25:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CallerNotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerNotGovernance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerNotMinter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Comm_InvalidCrossChain_Function\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Comm_InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Comm_InvalidSignature_FromContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Comm_InvalidSignature_FromEOA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Comm_InvalidSubscriber\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentTime\",\"type\":\"uint256\"}],\"name\":\"Comm_TimeExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Core_InvalidChannel\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Core_InvalidChannelType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Core_InvalidExpiryTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArg_ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min_threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual_value\",\"type\":\"uint256\"}],\"name\":\"InvalidArg_LessThanExpected\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"max_threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual_value\",\"type\":\"uint256\"}],\"name\":\"InvalidArg_MoreThanExpected\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"InvalidArgument_WrongAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinterZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Payload_Duplicacy_Error\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PushStaking_InvalidEpoch_LessThanExpected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PushStaking_InvalidEpoch_MoreThanExpected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PushStaking_MigrationCompleted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"UnauthorizedCaller\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"CallerNotMinter(address)\":[{\"details\":\"Selector 0x5fb5729e.\",\"params\":{\"caller\":\"The caller of the function.\"}}],\"InvalidMinterZeroAddress()\":[{\"details\":\"Selector 0x04a208c7.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"Errors\",\"version\":1},\"userdoc\":{\"errors\":{\"CallerNotAdmin()\":[{\"notice\":\"Reverts when `msg.sender` is not the admin of the contract.\"}],\"CallerNotGovernance()\":[{\"notice\":\"Reverts when `msg.sender` is not the governance.\"}],\"CallerNotMinter(address)\":[{\"notice\":\"Error when the caller is not the minter.\"}],\"Comm_InvalidCrossChain_Function()\":[{\"notice\":\"Comm Contract Error: Reverts whenever the cross-chain function to be invoked is invalid.\"}],\"Comm_InvalidNonce()\":[{\"notice\":\"Comm Contract Error: Reverts whenever the nonce is invalid.\"}],\"Comm_InvalidSignature_FromContract()\":[{\"notice\":\"Comm Contract Error: Reverts whenever the signature is invalid from EIP-1271 perspective.\"}],\"Comm_InvalidSignature_FromEOA()\":[{\"notice\":\"Comm Contract Error: Reverts whenever the signature is invalid from EIP-712 perspective.\"}],\"Comm_InvalidSubscriber()\":[{\"notice\":\"Comm Contract Error: Reverts whenever the caller is an invalid subscriber.\"}],\"Comm_TimeExpired(uint256,uint256)\":[{\"notice\":\"Comm Contract Error: Reverts whenever the current time has exceeded the expected end time of a particular function logic.\"}],\"Core_InvalidChannel()\":[{\"notice\":\"Core Contract Error: Reverts when the Channel doesn't fit the required function calling criteria.\"}],\"Core_InvalidChannelType()\":[{\"notice\":\"Core Contract Error: Reverts when the Channel Type doesn't fit the required function calling criteria.\"}],\"Core_InvalidExpiryTime()\":[{\"notice\":\"Core Contract Error: Reverts whenever the expiry time is not in the future.\"}],\"InsufficientFunds()\":[{\"notice\":\"The msg.value sent is not enough to perform the operation.\"}],\"InvalidArg_ArrayLengthMismatch()\":[{\"notice\":\"Reverts when arrays passed as argument have a mismatch of their length.\"}],\"InvalidArg_LessThanExpected(uint256,uint256)\":[{\"notice\":\"Reverts when uint256 argument passed is less than expected value.\"}],\"InvalidArg_MoreThanExpected(uint256,uint256)\":[{\"notice\":\"Reverts when uint256 argument passed is more than expected value.\"}],\"InvalidArgument_WrongAddress(address)\":[{\"notice\":\"Reverts when address argument is zero address or invalid for the function.\"}],\"InvalidMinterZeroAddress()\":[{\"notice\":\"Error when the minter is the zero address.\"}],\"Payload_Duplicacy_Error()\":[{\"notice\":\"The Payload being passed has already been processed.\"}],\"PushStaking_InvalidEpoch_LessThanExpected()\":[{\"notice\":\"PushStaking Contract Error: Reverts only when the Epoch is less than actually required for a partcular staking-related action.\"}],\"PushStaking_InvalidEpoch_MoreThanExpected()\":[{\"notice\":\"PushStaking Contract Error: Reverts only when the Epoch is more than actually required for a partcular staking-related action.\"}],\"PushStaking_MigrationCompleted()\":[{\"notice\":\"PushStaking Contract Error: Reverts only when migration-related functions are called even though migration is completed.\"}],\"UnauthorizedCaller(address)\":[{\"notice\":\"Reverts when `msg.sender` is not the admin of the contract.\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"Library that includes all custom errors that any contract might use to revert with.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Errors.sol\":\"Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\",\":wormhole-solidity-sdk /= lib/wormhole-solidity-sdk/src/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0xa9bd3f23f9b309876e6d20e0817f1529a2587860aed1d8bc168377af6ebf6773\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://6c6d0278af5bfcbfae6fed2229a4e4fba368a984cfc59110cfe98ed2f0581b87\",\"dweb:/ipfs/QmefP8yRj7hF6tngCH4Y1atozt3PKF7ctkUQp78Rm32GBV\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"CallerNotAdmin"},{"inputs":[],"type":"error","name":"CallerNotGovernance"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"type":"error","name":"CallerNotMinter"},{"inputs":[],"type":"error","name":"Comm_InvalidCrossChain_Function"},{"inputs":[],"type":"error","name":"Comm_InvalidNonce"},{"inputs":[],"type":"error","name":"Comm_InvalidSignature_FromContract"},{"inputs":[],"type":"error","name":"Comm_InvalidSignature_FromEOA"},{"inputs":[],"type":"error","name":"Comm_InvalidSubscriber"},{"inputs":[{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"currentTime","type":"uint256"}],"type":"error","name":"Comm_TimeExpired"},{"inputs":[],"type":"error","name":"Core_InvalidChannel"},{"inputs":[],"type":"error","name":"Core_InvalidChannelType"},{"inputs":[],"type":"error","name":"Core_InvalidExpiryTime"},{"inputs":[],"type":"error","name":"InsufficientFunds"},{"inputs":[],"type":"error","name":"InvalidArg_ArrayLengthMismatch"},{"inputs":[{"internalType":"uint256","name":"min_threshold","type":"uint256"},{"internalType":"uint256","name":"actual_value","type":"uint256"}],"type":"error","name":"InvalidArg_LessThanExpected"},{"inputs":[{"internalType":"uint256","name":"max_threshold","type":"uint256"},{"internalType":"uint256","name":"actual_value","type":"uint256"}],"type":"error","name":"InvalidArg_MoreThanExpected"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"type":"error","name":"InvalidArgument_WrongAddress"},{"inputs":[],"type":"error","name":"InvalidMinterZeroAddress"},{"inputs":[],"type":"error","name":"Payload_Duplicacy_Error"},{"inputs":[],"type":"error","name":"PushStaking_InvalidEpoch_LessThanExpected"},{"inputs":[],"type":"error","name":"PushStaking_InvalidEpoch_MoreThanExpected"},{"inputs":[],"type":"error","name":"PushStaking_MigrationCompleted"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"type":"error","name":"UnauthorizedCaller"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@ensdomains/=node_modules/@ensdomains/","@ethereum-waffle/=node_modules/@ethereum-waffle/","@openzeppelin/=node_modules/@openzeppelin/","ds-test/=lib/forge-std/lib/ds-test/src/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","solidity-bytes-utils/=node_modules/solidity-bytes-utils/","wormhole-solidity-sdk /= lib/wormhole-solidity-sdk/src/","wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/"],"optimizer":{"enabled":true,"runs":99999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/libraries/Errors.sol":"Errors"},"evmVersion":"shanghai","libraries":{}},"sources":{"contracts/libraries/Errors.sol":{"keccak256":"0xa9bd3f23f9b309876e6d20e0817f1529a2587860aed1d8bc168377af6ebf6773","urls":["bzz-raw://6c6d0278af5bfcbfae6fed2229a4e4fba368a984cfc59110cfe98ed2f0581b87","dweb:/ipfs/QmefP8yRj7hF6tngCH4Y1atozt3PKF7ctkUQp78Rm32GBV"],"license":"SEE LICENSE IN LICENSE"}},"version":1},"id":25}